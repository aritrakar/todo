{"version":3,"sources":["ToDoComponent.jsx","todosData.js","App.js","index.js"],"names":["TDC","props","className","type","checked","item","completed","onChange","handleChange","id","style","textDecoration","color","fontStyle","text","todosData","todoArray","App","state","todos","task","bind","addTask","updating","this","setState","prevState","temp","length","push","event","target","name","value","console","log","map","todo","key","placeholder","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+MAEe,SAASA,EAAIC,GAM1B,OACE,yBAAKC,UAAU,aACb,2BACEC,KAAK,WACLC,QAASH,EAAMI,KAAKC,UACpBC,SAAU,kBAAMN,EAAMO,aAAaP,EAAMI,KAAKI,OAEhD,uBAAGC,MAAOT,EAAMI,KAAKC,UAZV,CACbK,eAAgB,eAChBC,MAAO,UACPC,UAAW,UASiC,MAAOZ,EAAMI,KAAKS,OCflE,IAuBeC,EAvBG,CAChB,CACEN,GAAI,EACJK,KAAM,qBACNR,WAAW,GAEb,CACEG,GAAI,EACJK,KAAM,mBACNR,WAAW,GAEb,CACEG,GAAI,EACJK,KAAM,WACNR,WAAW,GAEb,CACEG,GAAI,EACJK,KAAM,8BACNR,WAAW,ICdXU,EAAY,GAmEDC,E,kDAjEb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,MAAOJ,EACPK,KAAM,IAER,EAAKZ,aAAe,EAAKA,aAAaa,KAAlB,gBACpB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBARJ,E,sDAWH,IAAD,OACRG,KAAKC,UAAS,SAACC,GACb,IAAIC,EAAO,CACTlB,GAAIO,EAAUY,OAAS,EACvBd,KAAM,EAAKI,MAAME,KACjBd,WAAW,GAKb,OAHIqB,EAAKb,KAAKc,OAAS,GACrBb,EAAUc,KAAKF,GAEV,CAAER,MAAOJ,EAAWK,KAAM,S,+BAI5BU,GACPN,KAAKC,SAAL,eACGK,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,mCAIzBxB,GACXyB,QAAQC,IAAI,WAAY1B,GACxBe,KAAKC,UAAS,SAACC,GAOb,MAAO,CAAEP,MANYO,EAAUP,MAAMiB,KAAI,SAACC,GAIxC,OAHIA,EAAK5B,KAAOA,IACd4B,EAAK/B,WAAa+B,EAAK/B,WAElB+B,W,+BAMH,IAAD,OAIP,OAHArB,EAAYQ,KAAKN,MAAMC,MAAMiB,KAAI,SAAC/B,GAAD,OAC/B,kBAACL,EAAD,CAAKsC,IAAKjC,EAAKI,GAAIJ,KAAMA,EAAMG,aAAc,EAAKA,kBAGlD,yBAAKN,UAAU,aACb,8BACE,2BACE8B,KAAK,OACL7B,KAAK,OACLoC,YAAY,iBACZhC,SAAUiB,KAAKD,YAGnB,4BAAQiB,QAAShB,KAAKF,SAAtB,YACCN,O,GA5DSyB,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.29f31ce2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function TDC(props) {\r\n  const styles = {\r\n    textDecoration: \"line-through\",\r\n    color: \"#d9d3d2\",\r\n    fontStyle: \"italic\",\r\n  };\r\n  return (\r\n    <div className=\"todo-item\">\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={props.item.completed}\r\n        onChange={() => props.handleChange(props.item.id)}\r\n      />\r\n      <p style={props.item.completed ? styles : null}>{props.item.text}</p>\r\n    </div>\r\n  );\r\n}\r\n","const todosData = [\r\n  {\r\n    id: 1,\r\n    text: \"Take out the trash\",\r\n    completed: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"Grocery shopping\",\r\n    completed: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    text: \"Mow lawn\",\r\n    completed: true,\r\n  },\r\n  {\r\n    id: 4,\r\n    text: \"Catch up on Micro-economics\",\r\n    completed: false,\r\n  },\r\n];\r\n\r\nexport default todosData;\r\n","import React from \"react\";\n//import './App.css';\nimport TDC from \"./ToDoComponent\";\nimport todosData from \"./todosData.js\";\n\nlet todoArray = [];\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: todosData,\n      task: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.updating = this.updating.bind(this);\n  }\n\n  addTask() {\n    this.setState((prevState) => {\n      let temp = {\n        id: todoArray.length + 1,\n        text: this.state.task,\n        completed: false,\n      };\n      if (temp.text.length > 0) {\n        todosData.push(temp);\n      }\n      return { todos: todosData, task: \"\" };\n    });\n  }\n\n  updating(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  handleChange(id) {\n    console.log(\"Changed \", id);\n    this.setState((prevState) => {\n      const updatedTodos = prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      });\n      return { todos: updatedTodos };\n    });\n  }\n\n  render() {\n    todoArray = this.state.todos.map((item) => (\n      <TDC key={item.id} item={item} handleChange={this.handleChange} />\n    ));\n    return (\n      <div className=\"todo-list\">\n        <form>\n          <input\n            name=\"task\"\n            type=\"text\"\n            placeholder=\"Type task name\"\n            onChange={this.updating}\n          />\n        </form>\n        <button onClick={this.addTask}>Add Task</button>\n        {todoArray}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}